version: '3'

services:

    app:
        build: .
        container_name: micro-videos-app
        #entrypoint: dockerize -template ./.docker/app/.env:.env -template ./.docker/nginx/nginx.conf:./.docker/nginx/nginx.conf -wait tcp://db:3306 -timeout 40s ./.docker/entrypoint.sh
        entrypoint: dockerize -template ./.docker/app/.env:.env -template ./.docker/app/.env.testing:.env.testing -wait tcp://db:3306 -timeout 40s ./.docker/entrypoint.sh
        environment:
            - _DB_HOST=db
            - _DB_DATABASE=code_micro_videos
            - _DB_USERNAME=root
            - _DB_PASSWORD=root
            - NGINX_HOST=db
            - NGINX_PORT=9000
            - _TEST_DB_DATABASE=code_micro_videos_test
        volumes:
            #- .:/var/www
            # usando Docker Toolbox só funcionou com o nome do volume com / na frente, no caso é /laravel
            - /codemicrovideos:/var/www
        networks:
            - app-network
        depends_on:
            - db
            - redis

    nginx:
        build: .docker/nginx
        container_name: micro-videos-nginx
        #entrypoint: dockerize -template ./.docker/app/nginx.conf:./.docker/nginx/nginx.conf
        restart: always
        tty: true
        ports:
            - "8000:80"
        volumes:
            #- .:/var/www
            # usando Docker Toolbox só funcionou com o nome do volume com / na frente, no caso é /laravel
            - /codemicrovideos:/var/www
        networks:
            - app-network
        depends_on:
            - app
        #environment:
        #    - NGINX_HOST=app
        #    - NGINX_HOST=9000

    db:
        image: mysql:5.7
        command: --innodb-use-native-aio=0
        container_name: micro-videos-db
        restart: always
        tty: true
        ports:
            - "33006:3306"
        volumes:
            #- .:/var/lib/mysql
            # usando Docker Toolbox só funcionou com o nome do volume com / na frente, no caso é /dbdata
            - /codemicrovideosdb:/var/lib/mysql
            #- ./.docker/mysql:/docker-entrypoint-initdb.d
            - /codemicrovideosmysql:/docker-entrypoint-initdb.d
        environment:
            - MYSQL_ROOT_PASSWORD=root
            - MYSQL_USER=root
        networks:
            - app-network

    redis:
        image: redis:alpine
        container_name: micro-videos-redis
        expose:
            - 6379
        networks:
            - app-network

networks:
    app-network:
        driver: bridge
